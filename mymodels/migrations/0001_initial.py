# Generated by Django 3.1.2 on 2020-12-30 09:46

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mymodels.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', mymodels.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perent_comment_id', models.IntegerField(blank=True, help_text='id "родительского" комментария, может быть пустым')),
                ('content', models.TextField(default='no', help_text='Контент самого комментария')),
                ('comment_rating', models.IntegerField(default=0, help_text='Рейтинг комментария')),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название поста', max_length=150)),
                ('content', models.TextField(default='no', help_text='Контент поста')),
                ('views', models.IntegerField(default=0, help_text='Счеттчик просмотров')),
                ('post_rating', models.IntegerField(default=0, help_text='Рейтинг поста')),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
                ('author', models.ForeignKey(blank=True, default='', help_text='Автор поста', on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(help_text='Имя тега поста', max_length=60)),
                ('count_posts', models.IntegerField(default=0, help_text='Счетчике постов')),
                ('posts', models.ManyToManyField(help_text='Свзять "Многих ко многим", тегов с постами"', to='mymodels.Posts')),
            ],
        ),
        migrations.CreateModel(
            name='SubTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(help_text='Булевое знгачение. 0 = бан, 1 = подписка, нету записи = ничего')),
                ('tag_id', models.ForeignKey(help_text='Свзять с тегом из таблицы тегов', on_delete=django.db.models.deletion.CASCADE, to='mymodels.tags')),
                ('user_id', models.ForeignKey(help_text='Свзять с пользователем из таблицы пользователей', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_raitinhg', models.IntegerField(default=0, help_text='Рейтинг пользователя')),
                ('avatar', models.ImageField(default='/default_avatar.svg', help_text='Аватар пользователя', upload_to='avatars/%Y/%m/%d/')),
                ('gender', models.CharField(choices=[('', ''), ('Male', 'Муж'), ('Female', 'Жен')], default='', max_length=6)),
                ('birth', models.DateField(help_text='Дата рождения пользолвателя', null=True)),
                ('about', models.TextField(blank=True, help_text='"О себе"', max_length=1000)),
                ('messages_count', models.BooleanField(default=0, help_text='1 если есть новые сообщения')),
                ('user_base', models.OneToOneField(help_text='Связь со стандартной моделью пользовтеля', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostsPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(help_text='Поле с url сохраненной фотографии поста', upload_to='posts/%Y/%m/%d/')),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
                ('post_id', models.ForeignKey(help_text='Связь, с постом, которому пренадлежит фото', on_delete=django.db.models.deletion.CASCADE, to='mymodels.posts')),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, help_text='Заголовок сообщения', max_length=500)),
                ('text', models.TextField(help_text='Текст сообщения', max_length=3000)),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
                ('user_id', models.ForeignKey(blank=True, help_text='Связь со стандартной моделью пользовтеля', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.BooleanField(help_text='Какая именно оценка. 0 = плохая, 1 = хорошая')),
                ('date_set', models.DateField(auto_now=True, help_text='Дата оценки')),
                ('ost_id', models.ForeignKey(help_text='Связь, с постом, которому относится отценка', on_delete=django.db.models.deletion.CASCADE, to='mymodels.posts')),
                ('user_id', models.ForeignKey(help_text='пользователь, к который оставил оценку', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.BooleanField(help_text='Какая именно оценка. 0 = плохая, 1 = хорошая')),
                ('date_set', models.DateField(auto_now=True, help_text='Дата оценки')),
                ('comment_id', models.ForeignKey(help_text='Комментарий, к которому относится оценка', on_delete=django.db.models.deletion.CASCADE, to='mymodels.comments')),
                ('user_id', models.ForeignKey(help_text='пользователь, к который оставил оценку', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(help_text='Поле с url сохраненной фотографии коментария', upload_to='comments/%Y/%m/%d/')),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
                ('сomment_id', models.ForeignKey(help_text='Связь, с коментарием, которому пренадлежит фото', on_delete=django.db.models.deletion.CASCADE, to='mymodels.comments')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='post_id',
            field=models.ForeignKey(help_text='Свзять, коментариев с постами', on_delete=django.db.models.deletion.CASCADE, to='mymodels.posts'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_id',
            field=models.ForeignKey(blank=True, default='', help_text='Свзять, коментариев с их авторами', on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AdminMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Input "Как обращаться"', max_length=500)),
                ('contacts', models.CharField(blank=True, help_text='Input "Способ связи"', max_length=500)),
                ('text', models.TextField(help_text='Текст сообщения', max_length=3000)),
                ('date_create', models.DateField(auto_now=True, help_text='Дата создания')),
                ('user_username', models.ForeignKey(blank=True, help_text='Связь со стандартной моделью пользовтеля, может быть null', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
